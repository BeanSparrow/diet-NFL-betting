"""Add home_wagered and away_wagered fields for betting analytics

Revision ID: c3dc95c94fa1
Revises: 003
Create Date: 2025-08-19 15:33:40.270308

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision = 'c3dc95c94fa1'
down_revision = '003'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop temp table if it exists
    conn = op.get_bind()
    try:
        conn.execute(text("DROP TABLE IF EXISTS _alembic_tmp_bets"))
    except:
        pass

    with op.batch_alter_table('bets', schema=None) as batch_op:
        batch_op.alter_column('actual_payout',
               existing_type=sa.FLOAT(),
               nullable=False)

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.add_column(sa.Column('home_wagered', sa.Float(), nullable=False, server_default='0.0'))
        batch_op.add_column(sa.Column('away_wagered', sa.Float(), nullable=False, server_default='0.0'))
        batch_op.alter_column('season_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('home_score',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('away_score',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('is_tie',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('total_bets',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('total_wagered',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('home_bets',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('away_bets',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('total_winnings',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('total_losses',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('total_bets',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('winning_bets',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('losing_bets',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('biggest_win',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('biggest_loss',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('biggest_loss',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('biggest_win',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('losing_bets',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('winning_bets',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('total_bets',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('total_losses',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('total_winnings',
               existing_type=sa.FLOAT(),
               nullable=True)

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.alter_column('away_bets',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('home_bets',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('total_wagered',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('total_bets',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('is_tie',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('away_score',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('home_score',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('season_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_column('away_wagered')
        batch_op.drop_column('home_wagered')

    with op.batch_alter_table('bets', schema=None) as batch_op:
        batch_op.alter_column('actual_payout',
               existing_type=sa.FLOAT(),
               nullable=True)

    op.create_table('_alembic_tmp_bets',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('game_id', sa.INTEGER(), nullable=False),
    sa.Column('team_picked', sa.VARCHAR(length=50), nullable=False),
    sa.Column('wager_amount', sa.FLOAT(), nullable=False),
    sa.Column('potential_payout', sa.FLOAT(), nullable=False),
    sa.Column('actual_payout', sa.FLOAT(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('placed_at', sa.DATETIME(), nullable=False),
    sa.Column('settled_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'game_id', name=op.f('unique_user_game_bet'))
    )
    # ### end Alembic commands ###